{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'POWIERZA'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\necho                      = CND.echo.bind CND\nPOWIERZA                  = require '../../pkg'\n{ to_width }              = require 'to-width'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@_set_globals = ->\n  _alert                    = alert\n  globalThis.alert          = ( P... ) =>\n    alert _border\n    alert()\n    _alert CND.reverse P...\n    alert()\n    alert _border\n  globalThis.help           = help\n  globalThis.urge           = urge\n  globalThis.info           = info\n  globalThis.debug          = debug\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\nsim = ( a, b ) -> Math.min ( POWIERZA.powierza a, b ), ( POWIERZA.osa a, b )\n\n#-----------------------------------------------------------------------------------------------------------\n@demo = ->\n  @_set_globals()\n  show = ( a, b ) ->\n    pc  = POWIERZA.powierza a, b\n    # pc /= Math.max ( Array.from b ).length, 0\n    # pc /= Math.max ( Array.from a ).length, ( Array.from b ).length\n    echo ( to_width ( rpr a ), 20 ), ( to_width ( rpr b ), 20 ), \\\n      ( CND.yellow to_width ( rpr pc ), 10 ), \\\n      ( CND.yellow to_width ( rpr POWIERZA.osa a, b ), 10 ), \\\n      ( CND.yellow to_width ( rpr sim a, b ), 10 )\n    return null\n  probes = [\n    '',\n    '(⿱宀珎貝)',\n    '12345',\n    '123456789',\n    'a-b-c',\n    'a-b-c-d-e-f',\n    'a-bc',\n    'a..........b....',\n    'a..........b....c',\n    'ab-c',\n    'abc',\n    'abc',\n    'abcdef',\n    '宀',\n    '宀珎貝',\n    '宀貝',\n    '宀貝珎',\n    ]\n  pairs = ( ( [ a, b, ] for a in probes when a isnt b ) for b in probes ).flat()\n  pairs.sort ( a, b ) ->\n    # ( POWIERZA.powierza a... ) - ( POWIERZA.powierza b... )\n    # ( POWIERZA.osa a... ) - ( POWIERZA.osa b... )\n    ( sim a... ) - ( sim b... )\n  show pair... for pair in pairs\n  return null\n\n\n\n\n############################################################################################################\nif module is require.main then do =>\n  @demo()\n  return null\n\n\n\n"
  ]
}