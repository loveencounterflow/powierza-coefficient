{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "AAGA;EAAA;AAAA,MAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd;;EAC5B,EAAA,GAA4B,OAAA,CAAQ,IAAR;;EAC5B,IAAA,GAA4B,OAAA,CAAQ,MAAR,EAhB5B;;;;;EAqBA,IAAG,MAAA,KAAU,OAAO,CAAC,IAArB;IAAkC,CAAA,CAAA,CAAA,GAAA,EAAA;;AAClC,UAAA,GAAA,EAAA,GAAA,EAAA,UAAA,EAAA,cAAA,EAAA,SAAA,EAAA,MAAA,EAAA,CAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA;MAAE,UAAU,CAAC,KAAX,GAA4B;MAC5B,UAAU,CAAC,IAAX,GAA4B;MAC5B,UAAU,CAAC,IAAX,GAA4B;MAC5B,UAAU,CAAC,IAAX,GAA4B;MAC5B,UAAU,CAAC,KAAX,GAA4B,MAJ9B;;MAME,UAAU,CAAC,SAAX,GAA4B,QAAA,CAAE,IAAF,CAAA;QAC1B,IAAA,CAAK,SAAL,EAAgB,GAAA,CAAI,IAAJ,CAAhB,EAAJ;;AAEI,eAAO;MAHmB;MAK5B,GAAA,GAAsB,OAAA,CAAQ,WAAR;MACtB,SAAA,GAAsB;MACtB,SAAA,GAAsB,IAAI,CAAC,OAAL,CAAa,IAAI,CAAC,IAAL,CAAU,SAAV,EAAqB,aAArB,EAAoC,SAApC,CAAb,EAbxB;;MAeE,UAAA,GAAsB,EAAE,CAAC,YAAH,CAAgB,SAAhB;MACtB,cAAA,GAAsB,UAAU,CAAC,QAAX,CAAoB,KAApB;MACtB,KAAyC,GAAG,CAAC,cAAJ,CAAA,CAAzC;QAAA,GAAG,CAAC,cAAJ,CAAmB,cAAnB,EAAA;OAjBF;;;;MAqBE,MAAA,GAAsB;MACtB,GAAA,GAAsB;MACtB,KAAA,GAAsB,CACpB,OADoB,EAEpB,QAFoB,EAGpB,GAHoB,EAIpB,GAJoB,EAKpB,GALoB;MAOtB,KAAA,uCAAA;;QACE,IAAA,GAAQ,IAAI,CAAC,OAAL,CAAa,IAAb,EAAmB,GAAnB;QACR,GAAA,GAAQ,CAAE,MAAF,EAAU,IAAV;QACR,IAAA,CAAK,OAAL,EAAc,GAAG,CAAC,UAAJ,CAAe,GAAf,CAAd;MAHF;MAIA,IAAA,CAAK,OAAL,EAAc,GAAG,CAAC,qBAAJ,CAA0B,EAA1B,CAAd;AACA,aAAO;IApCyB,CAAA,IAAlC;;AArBA",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DEMO-HARFBUZZJS'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\necho                      = CND.echo.bind CND\nFS                        = require 'fs'\nPATH                      = require 'path'\n# { promisify }\n\n\n############################################################################################################\nif module is require.main then do =>\n  globalThis.alert          = alert\n  globalThis.help           = help\n  globalThis.urge           = urge\n  globalThis.info           = info\n  globalThis.debug          = debug\n  # globalThis.read_file      = FS.readFileSync\n  globalThis.read_file      = ( path ) ->\n    urge '^44877^', rpr path\n    # return FS.readFileSync path\n    return true\n  ### NOTE only works with `wasm-pack build --target nodejs` ###\n  RBW                 = require '../../pkg'\n  font_path           = 'EBGaramond08-Italic.otf'\n  font_path           = PATH.resolve PATH.join __dirname, '../../fonts', font_path\n  # font_path           = '/home/flow/io/mingkwai-rack/jizura-fonts/fonts/EBGaramond08-Italic.otf'\n  font_bytes          = FS.readFileSync font_path\n  font_bytes_hex      = font_bytes.toString 'hex'\n  RBW.set_font_bytes font_bytes_hex unless RBW.has_font_bytes()\n  # font_bytes_hex      = 'abcdefgh'\n  # format              = 'short'\n  # format              = 'json'\n  format              = 'rusty'\n  shy                 = '\\xad'\n  texts               = [\n    \"affix\"\n    \"af#fix\"\n    \" \"\n    \"#\"\n    \"-\"\n    ]\n  for text in texts\n    text  = text.replace /#/g, shy\n    cfg   = { format, text, }\n    info '^223^', RBW.shape_text cfg\n  urge '^690^', RBW.glyph_to_svg_pathdata 42\n  return null\n\n\n\n\n\n\n\n"
  ]
}